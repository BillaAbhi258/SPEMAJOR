# documentation.

name: Microservices CI/CD Pipeline
env:
   MYSQL_DATABASE: Question
   MYSQL_ROOT_PASSWORD: Billa@258
   MYSQL_HOST: 127.0.0.1
on:
  push:
    branches: ["master"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
           mysql: 
            image: mysql:latest
            env:
             MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD}}
             MYSQL_DATABASE: ${{ env.MYSQL_DATABASE}}
             MYSQL_HOST: ${{env.MYSQL_HOST}}
             MYSQL_PASSWORD: ${{env.MYSQL_ROOT_PASSWORD}}
            ports:
             - 3306:3306
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          server-id: docker.io
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          distribution: "temurin"
          cache: maven


      - name: Building and Pushing Question Service
        run : |
             mvn package dockerfile:push --file question-service/pom.xml \
             -Dspring.datasource.url=jdbc:mysql://${{ env.MYSQL_HOST }}:3306/${{ env.MYSQL_DATABASE }} \
             -Dspring.datasource.username=root \
             -Dspring.datasource.password=${{ env.MYSQL_ROOT_PASSWORD }}
        env :
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME}}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD}}

      - name: Building and Pushing Quiz Service
        run: mvn  package dockerfile:push --file quiz-service/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Building and Pushing Contribute Service
        run: mvn  package dockerfile:push --file contribute-service/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Building and Pushing Config server
        run: mvn  package dockerfile:push --file cloud-config-server/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Building and Pushing Server registry
        run: mvn  package dockerfile:push --file service-registry/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Building and Pushing Api gateway
        run: mvn  package dockerfile:push --file api-gateway/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
